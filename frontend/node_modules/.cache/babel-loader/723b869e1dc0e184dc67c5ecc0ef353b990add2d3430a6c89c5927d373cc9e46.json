{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tammi\\\\Desktop\\\\react-millionaire\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Background_music from \"../assets/Background_music.mp3\";\nimport fiveToEight from \"../assets/five-eight.mp3\";\nimport eightToEleven from \"../assets/eight-eleven.mp3\";\nimport elevenToThirteen from \"../assets/eleven-thirteen.mp3\";\nimport fourteen from \"../assets/fourteen.mp3\";\nimport fifteen from \"../assets/fifteen.mp3\";\nimport millionaireRave from \"../assets/MillionaireRave.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  questionNumber,\n  setQuestionNumber,\n  setTimeOut\n}) => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const [answersLocked, setAnswersLocked] = useState(false);\n\n  // refs for various audio tracks\n  const audioRefs = {\n    backgroundMusic: useRef(new Audio(Background_music)),\n    fiveToEight: useRef(new Audio(fiveToEight)),\n    eightToEleven: useRef(new Audio(eightToEleven)),\n    elevenToThirteen: useRef(new Audio(elevenToThirteen)),\n    fourteen: useRef(new Audio(fourteen)),\n    fifteen: useRef(new Audio(fifteen)),\n    millionaireRave: useRef(new Audio(millionaireRave))\n    // TODO: add correct/incorrect sounds, maybe lock in answer\n  };\n\n  // Better way to play multiple audios. Plays song for the round and stops and resets all other audio tracks\n  const playAudio = audioRef => {\n    Object.values(audioRefs).forEach(ref => {\n      if (ref.current !== audioRef.current) {\n        ref.current.pause();\n        ref.current.currentTime = 0;\n      }\n    });\n\n    // loop the playing songs\n    audioRef.current.loop = true;\n    audioRef.current.play();\n  };\n  useEffect(() => {\n    const {\n      backgroundMusic,\n      fiveToEight,\n      eightToEleven,\n      elevenToThirteen,\n      fourteen,\n      fifteen,\n      millionaireRave\n    } = audioRefs;\n\n    // Play specific songs for question numbers. Works fine for different rounds\n    if (questionNumber < 6) {\n      playAudio(backgroundMusic);\n    } else if (questionNumber < 9) {\n      playAudio(fiveToEight);\n    } else if (questionNumber < 12) {\n      playAudio(eightToEleven);\n    } else if (questionNumber < 14) {\n      playAudio(elevenToThirteen);\n    } else if (questionNumber === 14) {\n      playAudio(fourteen);\n    } else if (questionNumber === 15) {\n      playAudio(fifteen);\n    } else if (questionNumber === 16) {\n      playAudio(millionaireRave);\n    }\n  }, [questionNumber]);\n\n  // Update the current question when the question number changes\n  useEffect(() => {\n    setQuestion(questions[questionNumber - 1]);\n  }, [questions, questionNumber]);\n\n  // Delays the execution of a callback function for any given time\n  const delay = (duration, callBack) => {\n    setTimeout(() => {\n      callBack();\n    }, duration);\n  };\n\n  // Handles the click for answers\n  const handleClick = item => {\n    if (!answersLocked) {\n      setSelectedAnswer(prevSelectedAnswer => prevSelectedAnswer === item ? null : item);\n      setClassName(\"answer active\");\n      console.log(selectedAnswer);\n    } else {\n      console.log(\"Answers are locked!\");\n    }\n  };\n\n  // Handles the \"Lock In Answer\" button click\n  const handleLockIn = () => {\n    if (!selectedAnswer) {\n      // Can not lock in if answer is not selected\n      alert(\"Please select an answer before locking in!\");\n      console.log(\"Select answer before locking in!\");\n    } else {\n      if (!answersLocked) {\n        // If no answer is locked in, lock the current selected answer\n        setAnswersLocked(true); // Lock answers to prevent multiple clicks\n\n        if (selectedAnswer) {\n          // If an answer is selected\n          // Set the className only for the selected answer with a 3-second delay for the main animation\n          delay(3000, () => {\n            setClassName(selectedAnswer.correct ? \"answer correct\" : \"answer incorrect\");\n            console.log(\"Selected Answer:\", selectedAnswer);\n\n            // If the locked-in answer is correct, move to the next question after 1 sec\n            if (selectedAnswer.correct) {\n              delay(1000, () => {\n                setQuestionNumber(prev => prev + 1);\n                setSelectedAnswer(null);\n                setClassName(\"answer\");\n                setAnswersLocked(false); // Unlock answers for the next question\n              });\n            } else {\n              // If the locked-in answer is incorrect, reset className for the incorrect answer after 1 sec\n              delay(1000, () => {\n                setClassName(\"answer\");\n                setAnswersLocked(false); // Unlock answers for the next question\n                console.log(\"Answer was wrong!!!!\");\n                // Set the timeOut state to true to trigger \"game over\" message\n                setTimeOut(true);\n              });\n            }\n          });\n        }\n      } else {\n        // If answers are already locked, console log\n        console.log(\"Answers are already locked!\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: question === null || question === void 0 ? void 0 : question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `answers ${answersLocked ? \"answers-locked\" : \"\"}`,\n      children: question === null || question === void 0 ? void 0 : question.answers.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${answersLocked ? item === selectedAnswer ? item.correct ? \"answer correct\" : \"answer incorrect\" : \"answer\" : selectedAnswer === item ? \"answer active\" : \"answer\"}`,\n        onClick: () => !answersLocked && handleClick(item),\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"lock-in-button\",\n      onClick: handleLockIn,\n      children: \"Lukitse vastaus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"jDiZa/BJfhFnvrGgR0g+mbu1IxU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Background_music","fiveToEight","eightToEleven","elevenToThirteen","fourteen","fifteen","millionaireRave","jsxDEV","_jsxDEV","Quiz","questions","questionNumber","setQuestionNumber","setTimeOut","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","answersLocked","setAnswersLocked","audioRefs","backgroundMusic","Audio","playAudio","audioRef","Object","values","forEach","ref","current","pause","currentTime","loop","play","delay","duration","callBack","setTimeout","handleClick","item","prevSelectedAnswer","console","log","handleLockIn","alert","correct","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/tammi/Desktop/react-millionaire/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Background_music from \"../assets/Background_music.mp3\";\r\nimport fiveToEight from \"../assets/five-eight.mp3\";\r\nimport eightToEleven from \"../assets/eight-eleven.mp3\";\r\nimport elevenToThirteen from \"../assets/eleven-thirteen.mp3\";\r\nimport fourteen from \"../assets/fourteen.mp3\";\r\nimport fifteen from \"../assets/fifteen.mp3\";\r\nimport millionaireRave from \"../assets/MillionaireRave.mp3\";\r\n\r\nconst Quiz = ({ questions, questionNumber, setQuestionNumber, setTimeOut }) => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [className, setClassName] = useState(\"answer\");\r\n  const [answersLocked, setAnswersLocked] = useState(false);\r\n\r\n  // refs for various audio tracks\r\n  const audioRefs = {\r\n    backgroundMusic: useRef(new Audio(Background_music)),\r\n    fiveToEight: useRef(new Audio(fiveToEight)),\r\n    eightToEleven: useRef(new Audio(eightToEleven)),\r\n    elevenToThirteen: useRef(new Audio(elevenToThirteen)),\r\n    fourteen: useRef(new Audio(fourteen)),\r\n    fifteen: useRef(new Audio(fifteen)),\r\n    millionaireRave: useRef(new Audio(millionaireRave)),\r\n    // TODO: add correct/incorrect sounds, maybe lock in answer\r\n  };\r\n\r\n  // Better way to play multiple audios. Plays song for the round and stops and resets all other audio tracks\r\n  const playAudio = (audioRef) => {\r\n    Object.values(audioRefs).forEach((ref) => {\r\n      if (ref.current !== audioRef.current) {\r\n        ref.current.pause();\r\n        ref.current.currentTime = 0;\r\n      }\r\n    });\r\n\r\n    // loop the playing songs\r\n    audioRef.current.loop = true;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const {\r\n      backgroundMusic,\r\n      fiveToEight,\r\n      eightToEleven,\r\n      elevenToThirteen,\r\n      fourteen,\r\n      fifteen,\r\n      millionaireRave,\r\n    } = audioRefs;\r\n\r\n    // Play specific songs for question numbers. Works fine for different rounds\r\n    if (questionNumber < 6) {\r\n      playAudio(backgroundMusic);\r\n    } else if (questionNumber < 9) {\r\n      playAudio(fiveToEight);\r\n    } else if (questionNumber < 12) {\r\n      playAudio(eightToEleven);\r\n    } else if (questionNumber < 14) {\r\n      playAudio(elevenToThirteen);\r\n    } else if (questionNumber === 14) {\r\n      playAudio(fourteen);\r\n    } else if (questionNumber === 15) {\r\n      playAudio(fifteen);\r\n    } else if (questionNumber === 16) {\r\n      playAudio(millionaireRave);\r\n    }\r\n  }, [questionNumber]);\r\n\r\n  // Update the current question when the question number changes\r\n  useEffect(() => {\r\n    setQuestion(questions[questionNumber - 1]);\r\n  }, [questions, questionNumber]);\r\n\r\n  // Delays the execution of a callback function for any given time\r\n  const delay = (duration, callBack) => {\r\n    setTimeout(() => {\r\n      callBack();\r\n    }, duration);\r\n  };\r\n\r\n  // Handles the click for answers\r\n  const handleClick = (item) => {\r\n    if (!answersLocked) {\r\n      setSelectedAnswer((prevSelectedAnswer) =>\r\n        prevSelectedAnswer === item ? null : item\r\n      );\r\n      setClassName(\"answer active\");\r\n      console.log(selectedAnswer);\r\n    } else {\r\n      console.log(\"Answers are locked!\");\r\n    }\r\n  };\r\n\r\n  // Handles the \"Lock In Answer\" button click\r\n  const handleLockIn = () => {\r\n    if (!selectedAnswer) {\r\n      // Can not lock in if answer is not selected\r\n      alert(\"Please select an answer before locking in!\");\r\n      console.log(\"Select answer before locking in!\");\r\n    } else {\r\n      if (!answersLocked) {\r\n        // If no answer is locked in, lock the current selected answer\r\n        setAnswersLocked(true); // Lock answers to prevent multiple clicks\r\n\r\n        if (selectedAnswer) {\r\n          // If an answer is selected\r\n          // Set the className only for the selected answer with a 3-second delay for the main animation\r\n          delay(3000, () => {\r\n            setClassName(\r\n              selectedAnswer.correct ? \"answer correct\" : \"answer incorrect\"\r\n            );\r\n\r\n            console.log(\"Selected Answer:\", selectedAnswer);\r\n\r\n            // If the locked-in answer is correct, move to the next question after 1 sec\r\n            if (selectedAnswer.correct) {\r\n              delay(1000, () => {\r\n                setQuestionNumber((prev) => prev + 1);\r\n                setSelectedAnswer(null);\r\n                setClassName(\"answer\");\r\n                setAnswersLocked(false); // Unlock answers for the next question\r\n              });\r\n            } else {\r\n              // If the locked-in answer is incorrect, reset className for the incorrect answer after 1 sec\r\n              delay(1000, () => {\r\n                setClassName(\"answer\");\r\n                setAnswersLocked(false); // Unlock answers for the next question\r\n                console.log(\"Answer was wrong!!!!\");\r\n                // Set the timeOut state to true to trigger \"game over\" message\r\n                setTimeOut(true);\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        // If answers are already locked, console log\r\n        console.log(\"Answers are already locked!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"question\">{question?.question}</div>\r\n      <div className={`answers ${answersLocked ? \"answers-locked\" : \"\"}`}>\r\n        {question?.answers.map((item) => (\r\n          <div\r\n            className={`${\r\n              answersLocked\r\n                ? item === selectedAnswer\r\n                  ? item.correct\r\n                    ? \"answer correct\"\r\n                    : \"answer incorrect\"\r\n                  : \"answer\"\r\n                : selectedAnswer === item\r\n                ? \"answer active\"\r\n                : \"answer\"\r\n            }`}\r\n            onClick={() => !answersLocked && handleClick(item)}\r\n          >\r\n            {item.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"lock-in-button\" onClick={handleLockIn}>\r\n        Lukitse vastaus\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}